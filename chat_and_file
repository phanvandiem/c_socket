#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <netdb.h>
#include <errno.h>


void error(const char *msg)
{
	perror(msg);
	exit(0);
}

void recv_file(int socket_fd, char *file_name, int file_size)
{
	FILE* received_file = fopen(file_name, "w");
	char buffer[2000] = {0};
        if (received_file == NULL)
        {
                fprintf(stderr, "Failed to open file foo --> %s\n", strerror(errno));

                exit(EXIT_FAILURE);
        }

        int remain_data = file_size;
	int len ;
	int n = read(socket_fd, buffer, 255);
	printf("len read : %d with buffer %s\n", n, buffer);
	return 0;

        while ((remain_data > 0) && ((len = recv(socket_fd, buffer, 2000, 0)) > 0))
        {
                //fwrite(buffer, sizeof(char), len, received_file);
		puts(buffer);
                remain_data -= len;
                fprintf(stdout, "Receive %d bytes and we hope :- %d bytes\n", len, remain_data);
	}

}
int main(int argc, char *argv[])
{
	int sockfd, portno, n;
	struct sockaddr_in serv_addr;
	struct hostent *server;

	char buffer[256];
	if (argc < 3)
	{
		fprintf(stderr, "usage %s hostname port\n",argv[0]);
		exit(0);
	}
	portno = atoi(argv[2]);
	sockfd = socket(AF_INET, SOCK_STREAM, 0);
	if(sockfd < 0)
	{
		error("ERROR opening socket");
	}
	server = gethostbyname(argv[1]);
	if (NULL == server)
	{
		fprintf(stderr, "Error, no such host");
	}
		bzero((char *) &serv_addr, sizeof(serv_addr));
		serv_addr.sin_family = AF_INET;
		bcopy((char *) server -> h_addr, (char *) & serv_addr.sin_addr, server -> h_length);
		serv_addr.sin_port = htons(portno);
		if (connect(sockfd, (struct sockaddr *) &serv_addr, sizeof(serv_addr)) < 0)
		{
			error("Connection Failed");
		}
		while(1)
		{
			bzero(buffer, 255);
			fgets(buffer, 255, stdin);
			n = write(sockfd, buffer, strlen(buffer));
			if (n < 0)
			{
				error("Error on writing");
			}
			bzero(buffer, 255);
			n = read(sockfd, buffer, 255);
		if( strncmp(buffer, "/system", strlen("/system")) == 0)
		{
		          puts("gui file");
		          char file_name[100] = {0} ;
		          char command[100];
			  int file_size ;
		
		          sscanf(buffer,"%s %s %d",command, file_name, &file_size);
		          printf("command is %s , file name is %s, file size is %d\n", command, file_name, file_size);
		
				printf("Server: %s", buffer);
			  recv_file(sockfd , file_name, file_size);
		}

			if (n < 0)
			{
				error("Error on reading");
			}
			printf("Server: %s", buffer);
			int i = strncmp("Bye", buffer, 3);
			if (0 == i)
				break;
		}

	close(sockfd);
	return 0;
}
